version: '3.0'

services:
  proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - app-net
  api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - redis
      - pg
    environment:
      - DB_HOST=pg
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    networks:
      - app-net


  pg:
    image: postgres:15.1-alpine
    volumes:
      - ./infrastructure/pg:/var/lib/postgresql/data/
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=access
      - POSTGRES_PASSWORD=access
      - POSTGRES_DB=access
    healthcheck:
      test: pg_isready -U access -d access
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - app-net
  redis:
    image: redis/redis-stack
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-net
    volumes:
    - ./infrastructure/redis/data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    restart: unless-stopped
    networks:
      - app-net

networks:
  app-net:
